=============================================================================================================================
HBase Lab Exe
==============================================================================================================================

bin/start-hbase.sh
bin/hbase shell

create 'empl' ,'pd'
create 'empl', 'pd' , 'pk'  (multiple column family)

describe 'empl'


put 'empl', 'R101','pd:pname', 'Ram'
put 'empl','R102', 'pd:psal', 85000

get 'empl' ,'R105'
get 'empl' , 'R105' , 'pd:psal'


scan 'empl' , {COLUMNS => 'pd:pname'}
get 'sales_tran' , 120, {COLUMN => 'st:soldqty', VERSIONS=>2}

scan 'empl' , {COLUMNS => ['pd:pname' , 'pd:psal']}

scan 'insurance' , {COLUMNS => ['grp:pname' , 'trn:prem1']}



alter 'empl' , {NAME => 'pd' , METHOD => 'delete'}               
                    (or)
alter 'empl' , 'delete'=>'pd'

alter  'sales_test' , NAME=>'st' , VERSIONS =>'5'

scan ‘t1’, {RAW => true, VERSIONS => 10}
scan 'sales_tran' , {RAW => true,VERSIONS => 4}

incr 'empl' , R105','pd:psal' ,10


count 'empl'

deleteall 'empl' ,'R105'
delete    'empl', 'R105','pd:psal'
 
truncate  'empl'
flush 'empl'


compact 'sales_tran'

enable 'empl'
disable 'empl'
drop 'empl'

stop_replication
status
version

Hbase_Hive_Export_Import
hbase org.apache.hadoop.hbase.mapreduce.ImportTsv -Dimporttsv.columns="HBASE_ROW_KEY,ck:mid,ck:ven" -Dimporttsv.separator="," click /inputdir/click_x.txt

Hbase Filters
Hbase
scan 'employee',{COLUMNS => 'ed:fname',FILTER => "ValueFilter(=,'binary:Ravi')"}
scan 'employee' , {FILTER => "QualifierFilter(=,'binary:fname')"}
scan 'employee' , {FILTER => "PageFilter(6)"}     (displays no of rows in a page)
scan 'employee' , {FILTER => "MultipleColumnPrefixFilter('fname','dept','desg','salary')"}


 scan 'htest_tbl' , {COLUMNS => ['ht:patient_name' , 'ht:medicine'] ,LIMIT => 10,STARTROW => '100020',ENDROW => '120000'}

 scan 'htest_tbl' , {COLUMNS => ['ht:patient_name' , 'ht:medicine'] ,STARTROW => '100020',ENDROW => '120000'}


 scan 'htest_tbl' , {COLUMNS => ['ht:patient_name' , 'ht:medicine'] ,TIMESTAMP => [1522563137201,1522563137211]}
  (Check syntax) 


show_filters
1) ColumnPrefixFilter ---> ColumnPrefixFilter(<column_name_prefix>)
2) TimestampsFilter   ---> Timestamp
3) PageFilter         ---> "PageFilter(1)" // No of pages
4) MultipleColumnPrefixFilter --> MultipleColumnPrefixFilter('col1','col2','col3')
5) FamilyFilter       ---> FamilyFilter('Column_family_name')
6) ColumnPaginatorFilter
7) SingleColumnValueFilter ---> "SingleColumnValueFilter('sd','make',=,binary:Apple')"
8) RowFilter
9) QualifierFilter 
10) ColumnRangeFilter
11) ValueFilter ---> "ValueFilter(=,'binaryprefix:Apple')"
12) PrefixFilter ---> FILTER => "PrefixFilter('rownum')" 
13) SingleColumnValueExcludedFilter
14) ColumnCountGetFilter
15) InclusiveStopFilter -->InclusiveStopFilter('stop_rownum')
16) DependentColumnFilter
17) FirstKeyOnlyFilter --> FirstKeyOnlyFilter()
18) KeyOnlyFilter      --> KeyOnlyFilter()
19) QualifierFilter    --> {FILTER => "QualifierFilter(=,'binary:columnname1')"}



scan 'sales' , {FILTER => "KeyOnlyFilter()"}
scan 'sales' , {FILTER => "FirstKeyOnlyFilter()"}
scan 'sales' , {COLUMNS => ['sd:make'],"PrefixFilter(2006001)" , LIMIT =>10}


SCAN
scan 'sales' , {COLUMNS => ['sd:make'], LIMIT =>10, STARTROW=>'1000',STOPROW=>'1100'}

COUNT
count 'sales'

Database creation
====================
create_namespace 'mydb'
list_namespace

Table creation
==============
create 'mydb:testbl','tm'

put 'mydb:testbl', 2001,'tm:pid',2001

==============================================================================================================================

Sqoop  import RDBMS to  hbase
----------------------------------
Sqoop has out-of-the-box support for HBase. To enable import into target HBase, you need to supply three additional parameters:
 --hbase-table  
 --column-family. 
 --hbase-row-key

-----------------------------------------------------------------------------------------------------------------------------------
create 'test','dtl' (on hbase)
bin/sqoop import --connect jdbc:mysql://localhost/migdb --table employee  --username root --password root --hbase-table empl --column-family ed --hbase-row-key eid -m1
 

sqoop import --connect jdbc:mysql://localhost/vivadb --table employee --username root --password root --hbase-table empl -where "id> '200'" --column-family ed --hbase-row-key eid  


-- selective columns
sqoop import --connect jdbc:mysql://localhost/hrd --table empl -username root --password root --hbase-table test --columns "id,make,brand" --column-family dtl --hbase-row-key id  -m 1

-- query statement
sqoop import --connect jdbc:mysql://localhost/migdb --username root --password root --query "select * from sales_tran where make in ('Apple','Samsung') and \$CONDITIONS" --hbase-table sales   --column-family sd --hbase-row-key sid  -m 1

--Join statement

sqoop import --connect jdbc:mysql://localhost/migdb --username root --password root --query "select t.trn_id,t.sid,t.make,t.brand,t.soldqty,t.solddt,r.price,r.country,r.currency from sales_tran t inner join sales_rate r on t.sid=r.sid and \$CONDITIONS" --hbase-table sales_merg  --column-family dtl --hbase-row-key sid  -m 1

=======================================================================================================================================================

********************************************************************************************************************************************************
 V. Vasu					<--------- End of HBase_Lab_Exe_1 -------->           			vasu.bigdatascience@gmail.com
********************************************************************************************************************************************************